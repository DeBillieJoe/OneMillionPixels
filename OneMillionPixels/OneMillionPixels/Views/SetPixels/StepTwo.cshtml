@model OneMillionPixels.Models.UploadImageStepTwo
@{
    ViewBag.Title = "Set pixels";
}

<hgroup class="title">
    <h1>@ViewBag.Title</h1>
</hgroup>
@using (Html.BeginForm("Upload", "SetPixels", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary();
    
    @Html.LabelFor(x => x.XCoordinates)
    @Html.TextBoxFor(x => x.XCoordinates, new { id = "xCoordinate", @readonly = "readonly" })
    @Html.ValidationMessageFor(x => x.XCoordinates)

    @Html.LabelFor(x => x.YCoordinates)
    @Html.TextBoxFor(x => x.YCoordinates, new { id = "yCoordinate", @readonly = "readonly" })
    @Html.ValidationMessageFor(x => x.YCoordinates)
    
    @Html.LabelFor(x => x.Link) 
    @Html.TextBoxFor(x => x.Link)
    @Html.ValidationMessageFor(x => x.Link)

    @Html.HiddenFor(x => x.Width)
    @Html.HiddenFor(x => x.Height)
    @Html.HiddenFor(x => x.ContentType)
    @Html.HiddenFor(x => x.BinaryContent)
    <input type="submit" value="Finish" name="upload" id="uploadImage" />
}
@{
    foreach (var image in Model.Images)
    {
        string src = "data:image/png;base64," + Convert.ToBase64String(image.BinaryContent);
        <a href="@image.Link">
            <img src="@src" style="display: none" X="@image.X" Y="@image.Y" class="preview"/>
        </a>
    }
}

@{
    string dragStyles = "width:" + Model.Width + "px; height:" + Model.Height + "px; border: 1px solid black;";
}

<div id='drag' style="@dragStyles">
    @{string srcUploaded = "data:image/png;base64," + Convert.ToBase64String(Model.BinaryContent); }
    <img src="@srcUploaded" />
</div>

<canvas id="myCanvas" width="1000" height="1000" style="border: 1px solid #000000;"></canvas>


<script type="text/javascript">
    function mouseDown(e) {
        window.addEventListener('mousemove', move, true);
    }

    function mouseUp() {
        window.removeEventListener('mousemove', move, true);
    }

    function move(e) {
        var div = $("#drag");
        div[0].style.position = 'absolute';
        div[0].style.top = e.pageY + 'px';
        div[0].style.left = e.pageX + 'px';

        setCoordinates(div);
    }

    function setCoordinates(element) {
        var canvas = $("#myCanvas");
        var pos = canvas.position();
        var width = element.width();
        var height = element.height();
        var divPos = element.position();

        if (divPos.top >= pos.top && divPos.top < (pos.top + 1000) - height &&
            divPos.left >= pos.left && divPos.left < (pos.left + 1000) - width) {
            divPos = element.position();
            $("#yCoordinate").val(parseInt(divPos.top - pos.top));
            $("#xCoordinate").val(parseInt(divPos.left - pos.left));
        }
        else {
            $("#yCoordinate").val("");
            $("#xCoordinate").val("");
        }
    }

    function drawImages() {
        var images = $(".preview");
        var ctx = $("#myCanvas")[0].getContext('2d');
        images.each(function () {
            var currentImage = $(this)[0];
            var img = new Image();
            img.onload = function () {

                ctx.drawImage(img, currentImage.getAttribute("X"), currentImage.getAttribute("Y"));
            }
            img.src = currentImage.getAttribute("src");
        });
        images.each(function () {
            $(this).remove();
        });
    }

    $(function () {
        var div = $("#drag")[0];
        var canvas = $("#myCanvas");
        var pos = canvas.position();

        div.style.top = pos.top + 'px';
        div.style.left = pos.left + 'px';

        div.addEventListener('mousedown', mouseDown, false);
        window.addEventListener('mouseup', mouseUp, false);

        drawImages();
    })
</script>
